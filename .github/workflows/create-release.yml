name: "Create release"

on:
  push:
    branches:
      - production

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/checkout@v2.2.0
        with:
          ref: 'production'

      - name: Get latest tag version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Get next tag version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: minor

      - name: Push new tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: ${{ steps.bump-semver.outputs.new_version }}
          message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Open pull request from production back to dev
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: production
          base: dev
          title: Merge production into dev branch
          body: |
            This PR merges the production branch back into dev.
            This ensures that the updates to production are also present on the dev branch.

