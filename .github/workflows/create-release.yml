name: "Create release"

on:
  pull_request:
    branches:
      - production
    types:
      - closed

jobs:
  release:
    if: github.event.pull_request.merged == true # Only run on merges
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Get version update type
        # NOTE: Using intermediary variable for security best practices
        # See: https://securitylab.github.com/research/github-actions-untrusted-input
        env:
          BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          if [[ $BRANCH =~ ^release/* ]]; then
            TYPE="minor"
          else
            TYPE="patch"
          fi
          echo "VERSION_INCREMENT_TYPE=$TYPE" >> $GITHUB_ENV

      - name: Checkout repo production branch
        uses: actions/checkout@v2.2.0
        with:
          ref: 'production'

      - name: Get latest tag version
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag

      - name: Get next tag version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump-semver
        with:
          current_version: ${{ steps.get-latest-tag.outputs.tag }}
          level: ${{ env.VERSION_INCREMENT_TYPE }}

      - name: Push new tag
        run: |
          git tag ${{ steps.bump-semver.outputs.new_version }}
          git push origin ${{ steps.bump-semver.outputs.new_version }}

      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: ".github/workflows/release-changelog-config.json"
          fromTag: ${{ steps.get-latest-tag.outputs.tag }}
          toTag: ${{ steps.bump-semver.outputs.new_version }}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.bump-semver.outputs.new_version }}
          release_name: Release ${{ steps.bump-semver.outputs.new_version }}
          body: ${{steps.github_release.outputs.changelog}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Open pull request from production back to dev
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: production
          base: dev
          title: Merge production into dev branch
          reviewers: ${{ github.actor }}
          body: |
            Hi @${{ github.actor }}!

            This PR merges the production branch back into dev.
            This ensures that the updates to production are also present on the dev branch.

