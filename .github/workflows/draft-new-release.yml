name: "Draft new release"

on:
  workflow_dispatch

jobs:
  draft-new-release:
    name: "Draft a new release off the dev branch"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.2.0
        with:
          ref: 'dev'
          fetch-depth: 0

      - name: 'Get Previous tag version'
        id: previous_version
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Get next release version
        id: next_version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.previous_tag.outputs.tag }}
          version-fragment: 'feature'

      - name: Create release branch
        run: git checkout -b release/${{ steps.next_version.outputs.next-version }}

      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@1.1.0
        with:
          version: ${{ steps.next_version.outputs.next-version }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub Release Branch Action"
          git config user.email noreply@github.com

      # This step will differ depending on your project setup
      # Fortunately, yarn has a built-in command for doing this!
      - name: Bump version in package.json
        run: yarn version --new-version ${{ steps.next_version.outputs.next-version }} --no-git-tag-version

      - name: Commit changelog and manifest files
        id: make-commit
        run: |
          git add CHANGELOG.md package.json
          git commit --message "Prepare release ${{ steps.next_version.outputs.next-version }}"

          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Push new branch
        run: git push origin release/${{ steps.next_version.outputs.next-version }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/${{ steps.next_version.outputs.next-version }}
          base: production
          title: Release version ${{ steps.next_version.outputs.next-version }}
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          # Write a nice message to the user.
          # We are claiming things here based on the `publish-new-release.yml` workflow.
          # You should obviously adopt it to say the truth depending on your release workflow :)
          body: |
            Hi @${{ github.actor }}!

            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.
            I've updated the changelog and bumped the versions in the manifest files in this commit: ${{ steps.make-commit.outputs.commit }}.

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
